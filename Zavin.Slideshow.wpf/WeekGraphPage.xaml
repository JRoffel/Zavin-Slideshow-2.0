<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:Zavin.Slideshow.wpf" xmlns:DV="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit" xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit" x:Name="WeekGraphPage1" x:Class="Zavin.Slideshow.wpf.WeekGraphPage" xmlns:chartingprimitives="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=System.Windows.Controls.DataVisualization.Toolkit" mc:Ignorable="d" Title="WeekGraph" Loaded="WeekGraphPage1_Loaded" Background="White">
    <Grid>
        <Grid.Resources>
            <Style x:Key="StatusColor" TargetType="chartingToolkit:ColumnDataPoint">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="chartingToolkit:ColumnDataPoint">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid Background="{Binding WastaColor}">
                                    <Rectangle>
                                        <Rectangle.Fill>
                                            <LinearGradientBrush>
                                                <GradientStop Color="#77ffffff" Offset="0"/>
                                                <GradientStop Color="#00ffffff" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Border BorderBrush="#ccffffff" BorderThickness="1">
                                        <Border BorderBrush="#77ffffff" BorderThickness="1"/>
                                    </Border>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>

        <Grid.Background>
            <ImageBrush ImageSource="images/sidebar.jpg"/>
        </Grid.Background>

        <chartingToolkit:Chart Name="MainChart" Title="Productie vs Aanvoer" FontWeight="DemiBold" Background="Transparent" Margin="-9,-2,9,2" Grid.Column="0">
            <chartingToolkit:Chart.PlotAreaStyle>
                <Style TargetType="Grid">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
            </chartingToolkit:Chart.PlotAreaStyle>
            <chartingToolkit:Chart.Axes>
                <chartingToolkit:LinearAxis Orientation="Y" Minimum="0" Maximum="300" Interval="25" ShowGridLines="True"></chartingToolkit:LinearAxis>
            </chartingToolkit:Chart.Axes>
            <chartingToolkit:Chart.LegendStyle>
                <Style TargetType="Control">
                    <Setter Property="Margin" Value="15,0"/>
                    <Setter Property="Width" Value="0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                </Style>
            </chartingToolkit:Chart.LegendStyle>
            <chartingToolkit:Chart.Series>
                <chartingToolkit:ColumnSeries x:Name="BarSeriesProductie" Title="Productie" IndependentValueBinding="{Binding Path=Production.Week}" DependentValueBinding="{Binding Path=Production.Productions}" DataPointStyle="{StaticResource StatusColor}">
                    <chartingToolkit:ColumnSeries.LegendItemStyle>
                        <Style TargetType="Control">
                            <Setter Property="Width" Value="0"/>
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                        </Style>
                    </chartingToolkit:ColumnSeries.LegendItemStyle>
                </chartingToolkit:ColumnSeries>

                <chartingToolkit:ColumnSeries x:Name="BarSeriesAanvoer" Title="Aanvoer" IndependentValueBinding="{Binding Path=Key}" DependentValueBinding="{Binding Path=Value}">

                    <chartingToolkit:ColumnSeries.LegendItemStyle>
                        <Style TargetType="Control">
                            <Setter Property="Width" Value="0"/>
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                        </Style>
                    </chartingToolkit:ColumnSeries.LegendItemStyle>
                    <chartingToolkit:ColumnSeries.DataPointStyle>
                        <Style TargetType="chartingToolkit:ColumnDataPoint">
                            <Setter Property="Background" Value="Gray"></Setter>
                        </Style>
                    </chartingToolkit:ColumnSeries.DataPointStyle>
                    <chartingToolkit:ColumnSeries.ItemsSource>
                        <PointCollection>

                        </PointCollection>
                    </chartingToolkit:ColumnSeries.ItemsSource>
                </chartingToolkit:ColumnSeries>
            </chartingToolkit:Chart.Series>

            <chartingToolkit:Chart.Template>

                <ControlTemplate TargetType="chartingToolkit:Chart">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Grid>


                            <Grid.RowDefinitions>
                                <RowDefinition Height="500"/>
                            </Grid.RowDefinitions>

                            <DV:Title Content="{TemplateBinding Title}" Style="{TemplateBinding TitleStyle}" />

                            <!-- Use a nested Grid to avoid possible clipping behavior resulting from ColumnSpan+Width=Auto -->
                            <Grid Grid.Row="1" Margin="15,300,15,-350" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid>

                                </Grid>
                                <DV:Legend x:Name="Legend" Header="{TemplateBinding LegendTitle}" Style="{TemplateBinding LegendStyle}" Grid.Column="1" />
                                <chartingprimitives:EdgePanel x:Name="ChartArea" Style="{TemplateBinding ChartAreaStyle}">
                                    <Grid Canvas.ZIndex="-1" Style="{TemplateBinding PlotAreaStyle}" />
                                    <!--Original Border Style: <Border Canvas.ZIndex="10" BorderBrush="#FF919191" BorderThickness="1" />

                                     Use transparent border:
                                    <Border Canvas.ZIndex="10" BorderBrush="Transparent" BorderThickness="1" />
                                    // or BorderThickness=0: 
                                    <Border Canvas.ZIndex="10" BorderThickness="0" />
                                    // or no border at all-->

                                </chartingprimitives:EdgePanel>
                            </Grid>
                        </Grid>
                    </Border>

                </ControlTemplate>

            </chartingToolkit:Chart.Template>

        </chartingToolkit:Chart>
        <Label x:Name="LegendaProductieLabel" Content="Blauw - Productie" Foreground="Blue" HorizontalAlignment="Center" Margin="90,176,666,0" VerticalAlignment="Top" FontWeight="Bold"/>
        <Label x:Name="LegendaGeplandePitStopLabel" Content="Geel - Geplande onderhoudsstop" Foreground="#FFE8C50B" HorizontalAlignment="Center" Margin="116,201,608,0" VerticalAlignment="Top" FontWeight="Bold"/>
        <Label x:Name="LegendaOngeplandePitStopLabel" Content="Rood - Ongeplande pitstop" Foreground="Red" HorizontalAlignment="Center" Margin="90,226,615,0" VerticalAlignment="Top" FontWeight="Bold"/>
        <Label x:Name="LegendaAanvoerLabel" Content="Grijs - Aanvoer" Foreground="Gray" HorizontalAlignment="Center" Margin="90,249,681,0" VerticalAlignment="Top" FontWeight="Bold"/>
        <Label x:Name="LabelAfgelopenWeek" Content="Totaal Afgelopen week:" HorizontalAlignment="Center" Margin="660,176,250,0" VerticalAlignment="Top" FontWeight="Bold" FontSize="14"/>
        <Label x:Name="labelHuidigeWeek" Content="Totaal Huidige week:" HorizontalAlignment="Center" Margin="650,201,250,0" VerticalAlignment="Top" RenderTransformOrigin="0.158,0.615" FontWeight="Bold" FontSize="14"/>
        <!--<StackPanel Margin="20">

    -->
        <!-- The Opacity and Color of the SolidColorBrush 
         used to fill this rectangle is animated. -->
        <!--
    <Rectangle Width="100" Height="100">
      <Rectangle.Fill>
        <SolidColorBrush x:Name="MyAnimatedBrush" Color="Orange" />
      </Rectangle.Fill>
      <Rectangle.Triggers>

        -->
        <!-- Animates the brush's color to gray
             When the mouse enters the rectangle. -->
        <!--
        <EventTrigger RoutedEvent="Rectangle.MouseEnter">
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation
                Storyboard.TargetName="MyAnimatedBrush"
                Storyboard.TargetProperty="Color"
                To="Gray" Duration="0:0:1" />
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>

        -->
        <!-- Animates the brush's color to orange
             when the mouse leaves the rectangle. -->
        <!--
        <EventTrigger RoutedEvent="Rectangle.MouseLeave">
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation
                Storyboard.TargetName="MyAnimatedBrush"
                Storyboard.TargetProperty="Color"
                To="Orange" Duration="0:0:1" />
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>    

        -->
        <!-- Animates the brush's opacity when the
             left mouse button is pressed over the rectangle. -->
        <!--
        <EventTrigger RoutedEvent="Rectangle.MouseLeftButtonDown">
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation
                Storyboard.TargetName="MyAnimatedBrush"
                Storyboard.TargetProperty="Opacity"
                To="0.0" Duration="0:0:0.5" AutoReverse="True" />
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>        
      </Rectangle.Triggers>
    </Rectangle>
  </StackPanel>-->

    </Grid>
</Page>
